[
  {
    "code": "0x00",
    "command": "nop",
    "describe": "什么都不做"
  },
  {
    "code": "0x01",
    "command": "aconst_null",
    "describe": "将 null 推送至栈顶"
  },
  {
    "code": "0x02",
    "command": "iconst_m1",
    "describe": "将 int 型 -1 推送至栈顶"
  },
  {
    "code": "0x03",
    "command": "iconst_0",
    "describe": "将 int 型 0 推送至栈顶"
  },
  {
    "code": "0x04",
    "command": "iconst_1",
    "describe": "将 int 型 1 推送至栈顶"
  },
  {
    "code": "0x05",
    "command": "iconst_2",
    "describe": "将 int 型 2 推送至栈顶"
  },
  {
    "code": "0x06",
    "command": "iconst_3",
    "describe": "将 int 型 3 推送至栈顶"
  },
  {
    "code": "0x07",
    "command": "iconst_4",
    "describe": "将 int 型 4 推送至栈顶"
  },
  {
    "code": "0x08",
    "command": "iconst_5",
    "describe": "将 int 型 5 推送至栈顶"
  },
  {
    "code": "0x09",
    "command": "lconst_0",
    "describe": "将 long 型 0 推送至栈顶"
  },
  {
    "code": "0x0a",
    "command": "lconst_1",
    "describe": "将 long 型 1 推送至栈顶"
  },
  {
    "code": "0x0b",
    "command": "fconst_0",
    "describe": "将 float 型 0 推送至栈顶"
  },
  {
    "code": "0x0c",
    "command": "fconst_1",
    "describe": "将 float 型 1 推送至栈顶"
  },
  {
    "code": "0x0d",
    "command": "fconst_2",
    "describe": "将 float 型 2 推送至栈顶"
  },
  {
    "code": "0x0e",
    "command": "dconst_0",
    "describe": "将 double 型 0 推送至栈顶"
  },
  {
    "code": "0x0f",
    "command": "dconst_1",
    "describe": "将 double 型 1 推送至栈顶"
  },
  {
    "code": "0x10",
    "command": "bipush",
    "describe": "将单字节的常量值 (-128~127) 推送至栈顶"
  },
  {
    "code": "0x11",
    "command": "sipush",
    "describe": "将一个短整型常量值 (-32768~32767) 推送至栈顶"
  },
  {
    "code": "0x12",
    "command": "ldc",
    "describe": "将 int,float 或 String 型常量值从常量池中推送至栈顶"
  },
  {
    "code": "0x13",
    "command": "ldc_w",
    "describe": "将 int,float 或 String 型常量值从常量池中推送至栈顶(宽索引)"
  },
  {
    "code": "0x14",
    "command": "ldc2_w",
    "describe": "将 long 或 double 型常量值从常量池中推送至栈顶(宽索引)"
  },
  {
    "code": "0x15",
    "command": "iload",
    "describe": "将指定的 int 型本地变量推送至栈顶"
  },
  {
    "code": "0x16",
    "command": "lload",
    "describe": "将指定的 long 型本地变量推送至栈顶"
  },
  {
    "code": "0x17",
    "command": "fload",
    "describe": "将指定的 float 型本地变量推送至栈顶"
  },
  {
    "code": "0x18",
    "command": "dload",
    "describe": "将指定的 double 型本地变量推送至栈顶"
  },
  {
    "code": "0x19",
    "command": "aload",
    "describe": "将指定的引用类型本地变量推送至栈顶"
  },
  {
    "code": "0x1a",
    "command": "iload_0",
    "describe": "将第一个 int 型本地变量推送至栈顶"
  },
  {
    "code": "0x1b",
    "command": "iload_1",
    "describe": "将第二个 int 型本地变量推送至栈顶"
  },
  {
    "code": "0x1c",
    "command": "iload_2",
    "describe": "将第三个 int 型本地变量推送至栈顶"
  },
  {
    "code": "0x1d",
    "command": "iload_3",
    "describe": "将第四个 int 型本地变量推送至栈顶"
  },
  {
    "code": "0x1e",
    "command": "lload_0",
    "describe": "将第一个 long 型本地变量推送至栈顶"
  },
  {
    "code": "0x1f",
    "command": "lload_1",
    "describe": "将第二个 long 型本地变量推送至栈顶"
  },
  {
    "code": "0x20",
    "command": "lload_2",
    "describe": "将第三个 long 型本地变量推送至栈顶"
  },
  {
    "code": "0x21",
    "command": "lload_3",
    "describe": "将第四个 long 型本地变量推送至栈顶"
  },
  {
    "code": "0x22",
    "command": "fload_0",
    "describe": "将第一个 float 型本地变量推送至栈顶"
  },
  {
    "code": "0x23",
    "command": "fload_1",
    "describe": "将第二个 float 型本地变量推送至栈顶"
  },
  {
    "code": "0x24",
    "command": "fload_2",
    "describe": "将第三个 float 型本地变量推送至栈顶"
  },
  {
    "code": "0x25",
    "command": "fload_3",
    "describe": "将第四个 float 型本地变量推送至栈顶"
  },
  {
    "code": "0x26",
    "command": "dload_0",
    "describe": "将第一个 double 型本地变量推送至栈顶"
  },
  {
    "code": "0x27",
    "command": "dload_1",
    "describe": "将第二个 double 型本地变量推送至栈顶"
  },
  {
    "code": "0x28",
    "command": "dload_2",
    "describe": "将第三个 double 型本地变量推送至栈顶"
  },
  {
    "code": "0x29",
    "command": "dload_3",
    "describe": "将第四个 double 型本地变量推送至栈顶"
  },
  {
    "code": "0x2a",
    "command": "aload_0",
    "describe": "将第一个引用类型本地变量推送至栈顶"
  },
  {
    "code": "0x2b",
    "command": "aload_1",
    "describe": "将第二个引用类型本地变量推送至栈顶"
  },
  {
    "code": "0x2c",
    "command": "aload_2",
    "describe": "将第三个引用类型本地变量推送至栈顶"
  },
  {
    "code": "0x2d",
    "command": "aload_3",
    "describe": "将第四个引用类型本地变量推送至栈顶"
  },
  {
    "code": "0x2e",
    "command": "iaload",
    "describe": "将 int 型数组指定索引的值推送至栈顶"
  },
  {
    "code": "0x2f",
    "command": "laload",
    "describe": "将 long 型数组指定索引的值推送至栈顶"
  },
  {
    "code": "0x30",
    "command": "faload",
    "describe": "将 float 型数组指定索引的值推送至栈顶"
  },
  {
    "code": "0x31",
    "command": "daload",
    "describe": "将 double 型数组指定索引的值推送至栈顶"
  },
  {
    "code": "0x32",
    "command": "aaload",
    "describe": "将引用型数组指定索引的值推送至栈顶"
  },
  {
    "code": "0x33",
    "command": "baload",
    "describe": "将 boolean 或 byte 型数组指定索引的值推送至栈顶"
  },
  {
    "code": "0x34",
    "command": "caload",
    "describe": "将 char 型数组指定索引的值推送至栈顶"
  },
  {
    "code": "0x35",
    "command": "saload",
    "describe": "将 short 型数组指定索引的值推送至栈顶"
  },
  {
    "code": "0x36",
    "command": "istore",
    "describe": "将栈顶 int 型数值存入指定本地变量"
  },
  {
    "code": "0x37",
    "command": "lstore",
    "describe": "将栈顶 long 型数值存入指定本地变量"
  },
  {
    "code": "0x38",
    "command": "fstore",
    "describe": "将栈顶 float 型数值存入指定本地变量"
  },
  {
    "code": "0x39",
    "command": "dstore",
    "describe": "将栈顶 double 型数值存入指定本地变量"
  },
  {
    "code": "0x3a",
    "command": "astore",
    "describe": "将栈顶引用型数值存入指定本地变量"
  },
  {
    "code": "0x3b",
    "command": "istore_0",
    "describe": "将栈顶 int 型数值存入第一个本地变量"
  },
  {
    "code": "0x3c",
    "command": "istore_1",
    "describe": "将栈顶 int 型数值存入第二个本地变量"
  },
  {
    "code": "0x3d",
    "command": "istore_2",
    "describe": "将栈顶 int 型数值存入第三个本地变量"
  },
  {
    "code": "0x3e",
    "command": "istore_3",
    "describe": "将栈顶 int 型数值存入第四个本地变量"
  },
  {
    "code": "0x3f",
    "command": "lstore_0",
    "describe": "将栈顶 long 型数值存入第一个本地变量"
  },
  {
    "code": "0x40",
    "command": "lstore_1",
    "describe": "将栈顶 long 型数值存入第二个本地变量"
  },
  {
    "code": "0x41",
    "command": "lstore_2",
    "describe": "将栈顶 long 型数值存入第三个本地变量"
  },
  {
    "code": "0x42",
    "command": "lstore_3",
    "describe": "将栈顶 long 型数值存入第四个本地变量"
  },
  {
    "code": "0x43",
    "command": "fstore_0",
    "describe": "将栈顶 float 型数值存入第一个本地变量"
  },
  {
    "code": "0x44",
    "command": "fstore_1",
    "describe": "将栈顶 float 型数值存入第二个本地变量"
  },
  {
    "code": "0x45",
    "command": "fstore_2",
    "describe": "将栈顶 float 型数值存入第三个本地变量"
  },
  {
    "code": "0x46",
    "command": "fstore_3",
    "describe": "将栈顶 float 型数值存入第四个本地变量"
  },
  {
    "code": "0x47",
    "command": "dstore_0",
    "describe": "将栈顶 double 型数值存入第一个本地变量"
  },
  {
    "code": "0x48",
    "command": "dstore_1",
    "describe": "将栈顶 double 型数值存入第二个本地变量"
  },
  {
    "code": "0x49",
    "command": "dstore_2",
    "describe": "将栈顶 double 型数值存入第三个本地变量"
  },
  {
    "code": "0x4a",
    "command": "dstore_3",
    "describe": "将栈顶 double 型数值存入第四个本地变量"
  },
  {
    "code": "0x4b",
    "command": "astore_0",
    "describe": "将栈顶引用型数值存入第一个本地变量"
  },
  {
    "code": "0x4c",
    "command": "astore_1",
    "describe": "将栈顶引用型数值存入第二个本地变量"
  },
  {
    "code": "0x4d",
    "command": "astore_2",
    "describe": "将栈顶引用型数值存入第三个本地变量"
  },
  {
    "code": "0x4e",
    "command": "astore_3",
    "describe": "将栈顶引用型数值存入第四个本地变量"
  },
  {
    "code": "0x4f",
    "command": "iastore",
    "describe": "将栈顶 int 型数值存入指定数组的指定索引位置"
  },
  {
    "code": "0x50",
    "command": "lastore",
    "describe": "将栈顶 long 型数值存入指定数组的指定索引位置"
  },
  {
    "code": "0x51",
    "command": "fastore",
    "describe": "将栈顶 float 型数值存入指定数组的指定索引位置"
  },
  {
    "code": "0x52",
    "command": "dastore",
    "describe": "将栈顶 double 型数值存入指定数组的指定索引位置"
  },
  {
    "code": "0x53",
    "command": "aastore",
    "describe": "将栈顶引用型数值存入指定数组的指定索引位置"
  },
  {
    "code": "0x54",
    "command": "bastore",
    "describe": "将栈顶 boolean 或 byte 型数值存入指定数组的指定索引位置"
  },
  {
    "code": "0x55",
    "command": "castore",
    "describe": "将栈顶 char 型数值存入指定数组的指定索引位置"
  },
  {
    "code": "0x56",
    "command": "sastore",
    "describe": "将栈顶 short 型数值存入指定数组的指定索引位置"
  },
  {
    "code": "0x57",
    "command": "pop",
    "describe": "将栈顶数值弹出"
  },
  {
    "code": "0x58",
    "command": "pop2",
    "describe": "将栈顶的一个（long 或 double 类型的)或两个数值弹出（其它）"
  },
  {
    "code": "0x59",
    "command": "dup",
    "describe": "复制栈顶数值并将复制值压入栈顶"
  },
  {
    "code": "0x5a",
    "command": "dup_x1",
    "describe": "复制栈顶数值并将两个复制值压入栈顶"
  },
  {
    "code": "0x5b",
    "command": "dup_x2",
    "describe": "复制栈顶数值并将三个（或两个）复制值压入栈顶"
  },
  {
    "code": "0x5c",
    "command": "dup2",
    "describe": "复制栈顶一个（long 或 double 类型的)或两个（其它）数值并将复制值压入栈顶"
  },
  {
    "code": "0x5d",
    "command": "dup2_x1",
    "describe": "<待补充>"
  },
  {
    "code": "0x5e",
    "command": "dup2_x2",
    "describe": "<待补充>"
  },
  {
    "code": "0x5f",
    "command": "swap",
    "describe": "将栈最顶端的两个数值互换(数值不能是 long 或 double 类型的)"
  },
  {
    "code": "0x60",
    "command": "iadd",
    "describe": "将栈顶两 int 型数值相加并将结果压入栈顶"
  },
  {
    "code": "0x61",
    "command": "ladd",
    "describe": "将栈顶两 long 型数值相加并将结果压入栈顶"
  },
  {
    "code": "0x62",
    "command": "fadd",
    "describe": "将栈顶两 float 型数值相加并将结果压入栈顶"
  },
  {
    "code": "0x63",
    "command": "dadd",
    "describe": "将栈顶两 double 型数值相加并将结果压入栈顶"
  },
  {
    "code": "0x64",
    "command": "isub",
    "describe": "将栈顶两 int 型数值相减并将结果压入栈顶"
  },
  {
    "code": "0x65",
    "command": "lsub",
    "describe": "将栈顶两 long 型数值相减并将结果压入栈顶"
  },
  {
    "code": "0x66",
    "command": "fsub",
    "describe": "将栈顶两 float 型数值相减并将结果压入栈顶"
  },
  {
    "code": "0x67",
    "command": "dsub",
    "describe": "将栈顶两 double 型数值相减并将结果压入栈顶"
  },
  {
    "code": "0x68",
    "command": "imul",
    "describe": "将栈顶两 int 型数值相乘并将结果压入栈顶"
  },
  {
    "code": "0x69",
    "command": "lmul",
    "describe": "将栈顶两 long 型数值相乘并将结果压入栈顶"
  },
  {
    "code": "0x6a",
    "command": "fmul",
    "describe": "将栈顶两 float 型数值相乘并将结果压入栈顶"
  },
  {
    "code": "0x6b",
    "command": "dmul",
    "describe": "将栈顶两 double 型数值相乘并将结果压入栈顶"
  },
  {
    "code": "0x6c",
    "command": "idiv",
    "describe": "将栈顶两 int 型数值相除并将结果压入栈顶"
  },
  {
    "code": "0x6d",
    "command": "ldiv",
    "describe": "将栈顶两 long 型数值相除并将结果压入栈顶"
  },
  {
    "code": "0x6e",
    "command": "fdiv",
    "describe": "将栈顶两 float 型数值相除并将结果压入栈顶"
  },
  {
    "code": "0x6f",
    "command": "ddiv",
    "describe": "将栈顶两 double 型数值相除并将结果压入栈顶"
  },
  {
    "code": "0x70",
    "command": "irem",
    "describe": "将栈顶两 int 型数值作取模运算并将结果压入栈顶"
  },
  {
    "code": "0x71",
    "command": "lrem",
    "describe": "将栈顶两 long 型数值作取模运算并将结果压入栈顶"
  },
  {
    "code": "0x72",
    "command": "frem",
    "describe": "将栈顶两 float 型数值作取模运算并将结果压入栈顶"
  },
  {
    "code": "0x73",
    "command": "drem",
    "describe": "将栈顶两 double 型数值作取模运算并将结果压入栈顶"
  },
  {
    "code": "0x74",
    "command": "ineg",
    "describe": "将栈顶 int 型数值取负并将结果压入栈顶"
  },
  {
    "code": "0x75",
    "command": "lneg",
    "describe": "将栈顶 long 型数值取负并将结果压入栈顶"
  },
  {
    "code": "0x76",
    "command": "fneg",
    "describe": "将栈顶 float 型数值取负并将结果压入栈顶"
  },
  {
    "code": "0x77",
    "command": "dneg",
    "describe": "将栈顶 double 型数值取负并将结果压入栈顶"
  },
  {
    "code": "0x78",
    "command": "ishl",
    "describe": "将 int 型数值左移位指定位数并将结果压入栈顶"
  },
  {
    "code": "0x79",
    "command": "lshl",
    "describe": "将 long 型数值左移位指定位数并将结果压入栈顶"
  },
  {
    "code": "0x7a",
    "command": "ishr",
    "describe": "将 int 型数值右（符号）移位指定位数并将结果压入栈顶"
  },
  {
    "code": "0x7b",
    "command": "lshr",
    "describe": "将 long 型数值右（符号）移位指定位数并将结果压入栈顶"
  },
  {
    "code": "0x7c",
    "command": "iushr",
    "describe": "将 int 型数值右（无符号）移位指定位数并将结果压入栈顶"
  },
  {
    "code": "0x7d",
    "command": "lushr",
    "describe": "将 long 型数值右（无符号）移位指定位数并将结果压入栈顶"
  },
  {
    "code": "0x7e",
    "command": "iand",
    "describe": "将栈顶两 int 型数值作“按位与”并将结果压入栈顶"
  },
  {
    "code": "0x7f",
    "command": "land",
    "describe": "将栈顶两 long 型数值作“按位与”并将结果压入栈顶"
  },
  {
    "code": "0x80",
    "command": "ior",
    "describe": "将栈顶两 int 型数值作“按位或”并将结果压入栈顶"
  },
  {
    "code": "0x81",
    "command": "lor",
    "describe": "将栈顶两 long 型数值作“按位或”并将结果压入栈顶"
  },
  {
    "code": "0x82",
    "command": "ixor",
    "describe": "将栈顶两 int 型数值作“按位异或”并将结果压入栈顶"
  },
  {
    "code": "0x83",
    "command": "lxor",
    "describe": "将栈顶两 long 型数值作“按位异或”并将结果压入栈顶"
  },
  {
    "code": "0x84",
    "command": "iinc",
    "describe": "将指定int型变量增加指定值（i++, i--, i+=2）"
  },
  {
    "code": "0x85",
    "command": "i2l",
    "describe": "将栈顶 int 型数值强制转换成 long 型数值并将结果压入栈顶"
  },
  {
    "code": "0x86",
    "command": "i2f",
    "describe": "将栈顶 int 型数值强制转换成 float 型数值并将结果压入栈顶"
  },
  {
    "code": "0x87",
    "command": "i2d",
    "describe": "将栈顶 int 型数值强制转换成 double 型数值并将结果压入栈顶"
  },
  {
    "code": "0x88",
    "command": "l2i",
    "describe": "将栈顶 long 型数值强制转换成 int 型数值并将结果压入栈顶"
  },
  {
    "code": "0x89",
    "command": "l2f",
    "describe": "将栈顶 long 型数值强制转换成 float 型数值并将结果压入栈顶"
  },
  {
    "code": "0x8a",
    "command": "l2d",
    "describe": "将栈顶 long 型数值强制转换成 double 型数值并将结果压入栈顶"
  },
  {
    "code": "0x8b",
    "command": "f2i",
    "describe": "将栈顶 float 型数值强制转换成 int 型数值并将结果压入栈顶"
  },
  {
    "code": "0x8c",
    "command": "f2l",
    "describe": "将栈顶 float 型数值强制转换成 long 型数值并将结果压入栈顶"
  },
  {
    "code": "0x8d",
    "command": "f2d",
    "describe": "将栈顶 float 型数值强制转换成 double 型数值并将结果压入栈顶"
  },
  {
    "code": "0x8e",
    "command": "d2i",
    "describe": "将栈顶 double 型数值强制转换成 int 型数值并将结果压入栈顶"
  },
  {
    "code": "0x8f",
    "command": "d2l",
    "describe": "将栈顶 double 型数值强制转换成 long 型数值并将结果压入栈顶"
  },
  {
    "code": "0x90",
    "command": "d2f",
    "describe": "将栈顶 double 型数值强制转换成 float 型数值并将结果压入栈顶"
  },
  {
    "code": "0x91",
    "command": "i2b",
    "describe": "将栈顶 int 型数值强制转换成 byte 型数值并将结果压入栈顶"
  },
  {
    "code": "0x92",
    "command": "i2c",
    "describe": "将栈顶 int 型数值强制转换成 char 型数值并将结果压入栈顶"
  },
  {
    "code": "0x93",
    "command": "i2s",
    "describe": "将栈顶 int 型数值强制转换成 short 型数值并将结果压入栈顶"
  },
  {
    "code": "0x94",
    "command": "lcmp",
    "describe": "比较栈顶两 long 型数值大小，并将结果（1，0，-1）压入栈顶"
  },
  {
    "code": "0x95",
    "command": "fcmpl",
    "describe": "比较栈顶两 float 型数值大小，并将结果（1，0，-1）压入栈顶；当其中一个数值为 NaN 时，将 -1 压入栈顶"
  },
  {
    "code": "0x96",
    "command": "fcmpg",
    "describe": "比较栈顶两 float 型数值大小，并将结果（1，0，-1）压入栈顶；当其中一个数值为 NaN 时，将 1 压入栈顶"
  },
  {
    "code": "0x97",
    "command": "dcmpl",
    "describe": "比较栈顶两 double 型数值大小，并将结果（1，0，-1）压入栈顶；当其中一个数值为 NaN 时，将 -1 压入栈顶"
  },
  {
    "code": "0x98",
    "command": "dcmpg",
    "describe": "比较栈顶两 double 型数值大小，并将结果（1，0，-1）压入栈顶；当其中一个数值为 NaN 时，将 1 压入栈顶"
  },
  {
    "code": "0x99",
    "command": "ifeq",
    "describe": "当栈顶 int 型数值等于 0 时跳转"
  },
  {
    "code": "0x9a",
    "command": "ifne",
    "describe": "当栈顶 int 型数值不等于 0 时跳转"
  },
  {
    "code": "0x9b",
    "command": "iflt",
    "describe": "当栈顶 int 型数值小于 0 时跳转"
  },
  {
    "code": "0x9c",
    "command": "ifge",
    "describe": "当栈顶 int 型数值大于等于 0 时跳转"
  },
  {
    "code": "0x9d",
    "command": "ifgt",
    "describe": "当栈顶 int 型数值大于 0 时跳转"
  },
  {
    "code": "0x9e",
    "command": "ifle",
    "describe": "当栈顶 int 型数值小于等于 0 时跳转"
  },
  {
    "code": "0x9f",
    "command": "if_icmpeq",
    "describe": "比较栈顶两 int 型数值大小，当结果等于 0 时跳转"
  },
  {
    "code": "0xa0",
    "command": "if_icmpne",
    "describe": "比较栈顶两 int 型数值大小，当结果不等于 0 时跳转"
  },
  {
    "code": "0xa1",
    "command": "if_icmplt",
    "describe": "比较栈顶两 int 型数值大小，当结果小于 0 时跳转"
  },
  {
    "code": "0xa2",
    "command": "if_icmpge",
    "describe": "比较栈顶两 int 型数值大小，当结果大于等于 0 时跳转"
  },
  {
    "code": "0xa3",
    "command": "if_icmpgt",
    "describe": "比较栈顶两 int 型数值大小，当结果大于 0 时跳转"
  },
  {
    "code": "0xa4",
    "command": "if_icmple",
    "describe": "比较栈顶两 int 型数值大小，当结果小于等于 0 时跳转"
  },
  {
    "code": "0xa5",
    "command": "if_acmpeq",
    "describe": "比较栈顶两引用型数值，当结果相等时跳转"
  },
  {
    "code": "0xa6",
    "command": "if_acmpne",
    "describe": "比较栈顶两引用型数值，当结果不相等时跳转"
  },
  {
    "code": "0xa7",
    "command": "goto",
    "describe": "无条件跳转"
  },
  {
    "code": "0xa8",
    "command": "jsr",
    "describe": "跳转至指定 16 位 offset 位置，并将 jsr 下一条指令地址压入栈顶"
  },
  {
    "code": "0xa9",
    "command": "ret",
    "describe": "返回至本地变量指定的 index 的指令位置（一般与 jsr, jsr_w 联合使用）"
  },
  {
    "code": "0xaa",
    "command": "tableswitch",
    "describe": "用于 switch 条件跳转，case 值连续（可变长度指令）"
  },
  {
    "code": "0xab",
    "command": "lookupswitch",
    "describe": "用于 switch 条件跳转，case 值不连续（可变长度指令）"
  },
  {
    "code": "0xac",
    "command": "ireturn",
    "describe": "从当前方法返回 int"
  },
  {
    "code": "0xad",
    "command": "lreturn",
    "describe": "从当前方法返回 long"
  },
  {
    "code": "0xae",
    "command": "freturn",
    "describe": "从当前方法返回 float"
  },
  {
    "code": "0xaf",
    "command": "dreturn",
    "describe": "从当前方法返回 double"
  },
  {
    "code": "0xb0",
    "command": "areturn",
    "describe": "从当前方法返回对象引用"
  },
  {
    "code": "0xb1",
    "command": "return",
    "describe": "从当前方法返回void"
  },
  {
    "code": "0xb2",
    "command": "getstatic",
    "describe": "获取指定类的静态域，并将其值压入栈顶"
  },
  {
    "code": "0xb3",
    "command": "putstatic",
    "describe": "为指定的类的静态域赋值"
  },
  {
    "code": "0xb4",
    "command": "getfield",
    "describe": "获取指定类的实例域，并将其值压入栈顶"
  },
  {
    "code": "0xb5",
    "command": "putfield",
    "describe": "为指定的类的实例域赋值"
  },
  {
    "code": "0xb6",
    "command": "invokevirtual",
    "describe": "调用实例方法"
  },
  {
    "code": "0xb7",
    "command": "invokespecial",
    "describe": "调用超类构造方法，实例初始化方法，私有方法"
  },
  {
    "code": "0xb8",
    "command": "invokestatic",
    "describe": "调用静态方法"
  },
  {
    "code": "0xb9",
    "command": "invokeinterface",
    "describe": "调用接口方法"
  },
  {
    "code": "0xba",
    "command": "–",
    "describe": "无此指令"
  },
  {
    "code": "0xbb",
    "command": "new",
    "describe": "创建一个对象，并将其引用值压入栈顶"
  },
  {
    "code": "0xbc",
    "command": "newarray",
    "describe": "创建一个指定原始类型（如int, float, char…）的数组，并将其引用值压入栈顶"
  },
  {
    "code": "0xbd",
    "command": "anewarray",
    "describe": "创建一个引用型（如类，接口，数组）的数组，并将其引用值压入栈顶"
  },
  {
    "code": "0xbe",
    "command": "arraylength",
    "describe": "获得数组的长度值并压入栈顶"
  },
  {
    "code": "0xbf",
    "command": "athrow",
    "describe": "将栈顶的异常抛出"
  },
  {
    "code": "0xc0",
    "command": "checkcast",
    "describe": "检验类型转换，检验未通过将抛出 ClassCastException"
  },
  {
    "code": "0xc1",
    "command": "instanceof",
    "describe": "检验对象是否是指定的类的实例，如果是将 1 压入栈顶，否则将0压入栈顶"
  },
  {
    "code": "0xc2",
    "command": "monitorenter",
    "describe": "获得对象的锁，用于同步方法或同步块"
  },
  {
    "code": "0xc3",
    "command": "monitorexit",
    "describe": "释放对象的锁，用于同步方法或同步块"
  },
  {
    "code": "0xc4",
    "command": "wide",
    "describe": "扩展局部变量的宽度"
  },
  {
    "code": "0xc5",
    "command": "multianewarray",
    "describe": "创建指定类型和指定维度的多维数组（执行该指令时，操作栈中必须包含各维度的长度值），并将其引用值压入栈顶"
  },
  {
    "code": "0xc6",
    "command": "ifnull",
    "describe": "为 null 时跳转"
  },
  {
    "code": "0xc7",
    "command": "ifnonnull",
    "describe": "不为 null 时跳转"
  },
  {
    "code": "0xc8",
    "command": "goto_w",
    "describe": "无条件跳转（宽索引）"
  },
  {
    "code": "0xc9",
    "command": "jsr_w",
    "describe": "跳转至指定 32 位 offset 位置，并将 jsr_w 下一条指令地址压入栈顶"
  }
]
